name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
      - develop
    paths:
      - "frontend/**"
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
      - develop

jobs:
  # Job for development environment (develop branch)
  build_and_deploy_dev:
    if: (github.ref == 'refs/heads/develop' && github.event_name == 'push') || (github.event_name == 'pull_request' && github.base_ref == 'develop' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Dev
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Get Pulumi Stack Outputs (Dev)
        id: pulumi-dev
        run: |
          # Install Pulumi CLI
          curl -fsSL https://get.pulumi.com | sh
          export PATH=$PATH:$HOME/.pulumi/bin

          # Navigate to Pulumi directory and get outputs
          cd infra/WikiQuizGenerator.Pulumi.Azure
          pulumi stack select dev
          echo "VITE_API_BASE_URL=$(pulumi stack output ViteApiBaseUrl)" >> $GITHUB_OUTPUT
          echo "VITE_APP_BASE_URL=$(pulumi stack output ViteAppBaseUrl)" >> $GITHUB_OUTPUT
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client

      - name: Get Id Token
        uses: actions/github-script@v6
        id: idtoken
        with:
          script: |
            const coredemo = require('@actions/core')
            return await coredemo.getIDToken()
          result-encoding: string

      - name: Build And Deploy Dev
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_DEV }}
          action: "upload"
          app_location: "./frontend"
          api_location: ""
          output_location: "dist"
          github_id_token: ${{ steps.idtoken.outputs.result }}
        env:
          VITE_API_BASE_URL: ${{ steps.pulumi-dev.outputs.VITE_API_BASE_URL }}
          VITE_APP_BASE_URL: ${{ steps.pulumi-dev.outputs.VITE_APP_BASE_URL }}

  # Job for production environment (main branch)
  build_and_deploy_prd:
    if: (github.ref == 'refs/heads/main' && github.event_name == 'push') || (github.event_name == 'pull_request' && github.base_ref == 'main' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Prd
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Get Pulumi Stack Outputs (Prd)
        id: pulumi-prd
        run: |
          # Install Pulumi CLI
          curl -fsSL https://get.pulumi.com | sh
          export PATH=$PATH:$HOME/.pulumi/bin

          # Navigate to Pulumi directory and get outputs
          cd infra/WikiQuizGenerator.Pulumi.Azure
          pulumi stack select prd
          echo "VITE_API_BASE_URL=$(pulumi stack output ViteApiBaseUrl)" >> $GITHUB_OUTPUT
          echo "VITE_APP_BASE_URL=$(pulumi stack output ViteAppBaseUrl)" >> $GITHUB_OUTPUT
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client

      - name: Get Id Token
        uses: actions/github-script@v6
        id: idtoken
        with:
          script: |
            const coredemo = require('@actions/core')
            return await coredemo.getIDToken()
          result-encoding: string

      - name: Build And Deploy Prd
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_GRAY_MUSHROOM_00D2AAA10 }}
          action: "upload"
          app_location: "./frontend"
          api_location: ""
          output_location: "dist"
          github_id_token: ${{ steps.idtoken.outputs.result }}
        env:
          VITE_API_BASE_URL: ${{ steps.pulumi-prd.outputs.VITE_API_BASE_URL }}
          VITE_APP_BASE_URL: ${{ steps.pulumi-prd.outputs.VITE_APP_BASE_URL }}

  # Close PR jobs for both environments
  close_pull_request_dev:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.base_ref == 'develop'
    runs-on: ubuntu-latest
    name: Close Pull Request Dev
    steps:
      - name: Close Pull Request
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_DEV }}
          action: "close"

  close_pull_request_prd:
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.base_ref == 'main'
    runs-on: ubuntu-latest
    name: Close Pull Request Prd
    steps:
      - name: Close Pull Request
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_GRAY_MUSHROOM_00D2AAA10 }}
          action: "close"
